name: Action
on:
  push:
    branches:
    - main

permissions:
      id-token: write
      contents: read
  
jobs:
  QA:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}   

    - name: pull docker image
      run: docker pull dishoneprabu/j2dk:j2dk.in

    - name: Aqua Security Trivy
      uses: aquasecurity/trivy-action@0.19.0
      with:
        image-ref: dishoneprabu/j2dk:j2dk.in
        format: template
        template: "@/contrib/junit.tpl"
        output: ./report.xml
        
    - name: Upload the trivy Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: trivy-report
        path: ./report.xml

    - name: 'Az CLI login'
      uses: azure/login@v2.0.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: whitelisting IP address
      run: |
        ipaddress=$(curl -s ifconfig.me )
        az acr network-rule add -n $REPO --ip-address ${ipaddress}
        
        #Counter variable
        count=0

        while [ $count -lt 12 ]
        do
        	whitelisted_ip=$(az acr network-rule list -n $REPO   | jq '.ipRules[] | select(.ipAddressOrRange == "'${ipaddress}'")')
          if [ ! -z "$whitelisted_ip" ]; then
            echo "IP has been whitelisted"
            break
          fi
          echo "retrying after 10 sec, Checking if whitelist reflects backend"
          sleep 10
          count=$((count+1))
          if [$count -eq 12];then
          exit 127
          fi
        done
      env:
        REPO: azurecontinerregistery
        
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1.0.1
      with:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        login-server: azurecontinerregistery.azurecr.io

    - name: Push docker image
      run: |
        docker tag dishoneprabu/j2dk:j2dk.in azurecontinerregistery.azurecr.io/j2dk:j2dk.in
        docker push azurecontinerregistery.azurecr.io/j2dk:j2dk.in

    - name: remove ip
      run: |
        ipaddress=$(curl -s ifconfig.me )
        az acr network-rule remove -n $REPO  --ip-address ${ipaddress}
      env:
        REPO: azurecontinerregistery

        

    
